{"componentChunkName":"component---src-layouts-docs-layout-jsx","path":"/docs/button","result":{"data":{"mdx":{"frontmatter":{"path":"/docs/button","title":"Buttons","description":"An interactive element that typically carries an action and returns a feedback."},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/docs/button\",\n  \"title\": \"Buttons\",\n  \"description\": \"An interactive element that typically carries an action and returns a feedback.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Basic Usage\"), mdx(\"p\", null, \"Button is primarily used to hold an action of which you want your users to get. Buttons should be easily\\ndiscoverable. On the most basic usage, append the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Button\"), \" class inside a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<button>\"), \" tag to quickly\\ncreate a button component. There are several variants that you can choose from, depending on the context\\nyou want your button to appear.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<button class=\\\"Button\\\">Button</button>\\n<button class=\\\"Button Button--primary\\\">Button</button>\\n<button class=\\\"Button Button--primary Button--outlined\\\">Button</button>\\n<button class=\\\"Button Button--primary Button--text\\\">Button</button>\\n<button class=\\\"Button Button--primary Button--elevated\\\">Button</button>\\n\")), mdx(\"h2\", null, \"Filled Button\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Has standard emphasis.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Used for primary actions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Good for grabbing attention of your users.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true bgColor=lighter\",\n    \"preview\": \"true\",\n    \"bgColor\": \"lighter\"\n  }), \"<button class=\\\"Button Button--primary\\\">Primary</button>\\n<button class=\\\"Button Button--secondary\\\">Secondary</button>\\n<button class=\\\"Button Button--warning\\\">Warning</button>\\n<button class=\\\"Button Button--danger\\\">Danger</button>\\n<button class=\\\"Button Button--dark\\\">Dark</button>\\n<button class=\\\"Button Button--light\\\">Light</button>\\n\")), mdx(\"h2\", null, \"Outlined Button\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lower emphasis than a filled button.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For secondary actions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Should be used in conjunction with a filled button.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true bgColor=lighter\",\n    \"preview\": \"true\",\n    \"bgColor\": \"lighter\"\n  }), \"<button class=\\\"Button Button--outlined Button--primary\\\">Primary</button>\\n<button class=\\\"Button Button--outlined Button--secondary\\\">Secondary</button>\\n<button class=\\\"Button Button--outlined Button--warning\\\">Warning</button>\\n<button class=\\\"Button Button--outlined Button--danger\\\">Danger</button>\\n<button class=\\\"Button Button--outlined Button--dark\\\">Dark</button>\\n\")), mdx(\"h2\", null, \"Text Button\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lowest emphasis of them all.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optional and is only used in rare cases.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<button class=\\\"Button Button--text Button--primary\\\">Primary</button>\\n<button class=\\\"Button Button--text Button--secondary\\\">Secondary</button>\\n<button class=\\\"Button Button--text Button--warning\\\">Warning</button>\\n<button class=\\\"Button Button--text Button--danger\\\">Danger</button>\\n<button class=\\\"Button Button--text Button--dark\\\">Dark</button>\\n<button class=\\\"Button Button--text Button--light\\\">Light</button>\\n\")), mdx(\"h2\", null, \"Elevated Button\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Custom effect with highest emphasis, higher than standard filled button.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Also optional, used in rare cases to make it stand out the most than other button.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usually standalone, not paired with other buttons.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<button class=\\\"Button Button--elevated Button--primary\\\">Primary</button>\\n\")), mdx(\"h2\", null, \"Sizes\"), mdx(\"p\", null, \"Multiple sizes of a button.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<button class=\\\"Button Button--primary Button--small\\\">Small</button>\\n<button class=\\\"Button Button--primary\\\">Base</button>\\n<button class=\\\"Button Button--primary Button--large\\\">Large</button>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"cd03d277-abe5-598c-b1df-3fb28575c913"}}}