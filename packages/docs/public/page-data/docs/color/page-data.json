{"componentChunkName":"component---src-layouts-docs-layout-jsx","path":"/docs/color","result":{"data":{"mdx":{"frontmatter":{"path":"/docs/color","title":"Color","description":"Unified color language of Tunaiku Design System"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/docs/color\",\n  \"title\": \"Color\",\n  \"description\": \"Unified color language of Tunaiku Design System\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Text Color\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".Color-<theme>\"), \" class to change the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text color\"), \" of an element.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<div class=\\\"Color-primary\\\">Primary Color</div>\\n<div class=\\\"Color-secondary\\\">Secondary Color</div>\\n<div class=\\\"Color-tertiary\\\">Tertiary Color</div>\\n<div class=\\\"Color-danger\\\">Danger Color</div>\\n<div class=\\\"Color-warning\\\">Warning Color</div>\\n<div class=\\\"Color-info\\\">Info Color</div>\\n<div class=\\\"Color-light BgColor-dark\\\">Light Color</div>\\n<div class=\\\"Color-dark\\\">Dark Color</div>\\n\")), mdx(\"h2\", null, \"Background Color\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".BgColor-<theme>\"), \" class to change the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"background color\"), \" of an element.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<div class=\\\"BgColor-primary Color-white\\\">Primary Color</div>\\n<div class=\\\"BgColor-secondary Color-white\\\">Secondary Color</div>\\n<div class=\\\"BgColor-tertiary Color-white\\\">Tertiary Color</div>\\n<div class=\\\"BgColor-danger Color-white\\\">Danger Color</div>\\n<div class=\\\"BgColor-warning Color-black\\\">Warning Color</div>\\n<div class=\\\"BgColor-info Color-white\\\">Info Color</div>\\n<div class=\\\"BgColor-light Color-black\\\">Light Color</div>\\n<div class=\\\"BgColor-dark Color-white\\\">Dark Color</div>\\n\")), mdx(\"h2\", null, \"Neutral Spectrum\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\",\n    \"metastring\": \"preview=true\",\n    \"preview\": \"true\"\n  }), \"<div class=\\\"BgColor-neutral-0 Padding\\\">Neutral 0</div>\\n<div class=\\\"BgColor-neutral-10 Padding\\\">Neutral 10</div>\\n<div class=\\\"BgColor-neutral-20 Padding\\\">Neutral 20</div>\\n<div class=\\\"BgColor-neutral-30 Padding\\\">Neutral 30</div>\\n<div class=\\\"BgColor-neutral-40 Padding\\\">Neutral 40</div>\\n<div class=\\\"BgColor-neutral-50 Padding\\\">Neutral 50</div>\\n<div class=\\\"BgColor-neutral-60 Padding\\\">Neutral 60</div>\\n<div class=\\\"BgColor-neutral-70 Padding\\\">Neutral 70</div>\\n<div class=\\\"BgColor-neutral-80 Padding\\\">Neutral 80</div>\\n<div class=\\\"BgColor-neutral-90 Padding\\\">Neutral 90</div>\\n<div class=\\\"BgColor-neutral-100 Padding\\\">Neutral 100</div>\\n\")), mdx(\"h2\", null, \"Using mixins\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scss\"\n  }), \".SomeComponent {\\n  color: tnk-color-theme('primary'); // switches text color to primary theme.\\n  background-color: tnk-color-theme('primary'); // switches background color to primary theme.\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"4d131f5e-3d79-5a4b-aca7-7ce03b4fbdce"}}}