@import '@tunaiku-ui/shape/scss/variables';
@import '@tunaiku-ui/color/scss/variables';
@import '@tunaiku-ui/spacing/scss/functions';
@import './variables';

@mixin tnk-create-input-classes() {
  .Input,
  .Textarea {
    @include tnk-input-base-styles();
    @include tnk-append-input-state-variants();
    @include tnk-append-input-color-theme-variants();
    @include tnk-append-input-size-variants();
    @include tnk-append-input-shape-variants();
  }
}

@mixin tnk-input-base-styles() {
  position: relative;
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  line-height: $tnk-input-line-height;
  font-family: $tnk-input-font-family;
  font-size: $tnk-input-font-size;
  padding: $tnk-input-spacing;
  transition: $tnk-input-transition;
  background-color: $tnk-input-bg-color;
  border-style: solid;
  border-width: 1px;
  border-color: $tnk-input-border-color;
  border-radius: $tnk-input-border-radius;
  outline: none;
  white-space: normal;
}

@mixin tnk-append-input-state-variants($color-theme: 'base') {
  @include tnk-append-input-focused-state($color-theme);
  @include tnk-append-input-hovered-state($color-theme);
  @include tnk-append-input-disabled-state();
}

@mixin tnk-append-input-focused-state($color-theme) {
  $focused-border-color: '' !default;
  $focused-box-shadow: '' !default;

  @if $color-theme == 'base' {
    $focused-border-color: $tnk-input-focused-border-color;
    $focused-box-shadow: $tnk-input-focused-box-shadow;
  } @else {
    $focused-border-color: tnk-theme-color($color-theme);
    $focused-box-shadow-color: tnk-theme-color($color-theme);
    $focused-box-shadow-values: $tnk-input-focused-box-shadow-values;
    $focused-box-shadow: $focused-box-shadow-values $focused-box-shadow-color;
  }

  @include tnk-input-is-not-disabled() {
    &:focus,
    &.is-focused {
      border-color: $focused-border-color;
      box-shadow: $focused-box-shadow;
    }
  }
}

@mixin tnk-append-input-hovered-state($color-theme) {
  @include tnk-input-is-not-disabled() {
    &:hover,
    &.is-hovered {
      border-color: $tnk-input-hovered-border-color;
    }
  }
}

@mixin tnk-append-input-disabled-state() {
  &:disabled,
  &.is-disabled {
    background-color: $tnk-input-disabled-background;
    cursor: not-allowed;
  }
}

/**
 * Append color theme variant classes.
 */
@mixin tnk-append-input-color-theme-variants() {
  @each $color-theme, $color-theme-value in $tnk-color-themes {
    &--#{$color-theme} {
      @include tnk-append-input-state-variants($color-theme);

      border-color: $color-theme-value;
    }
  }
}

@mixin tnk-append-input-size-variants() {
  @each $size-name, $size-value in $tnk-font-sizes {
    &--#{$size-name} {
      font-size: tnk-font-size($size-name);
      padding: tnk-spacing($size-name);
    }
  }
}

@mixin tnk-append-input-shape-variants() {
  &--rounded {
    border-radius: $tnk-input-rounded-border-radius;
  }
}

/**
 * Helper mixin to style input only when it's enabled
 * Approach taken from MDC.
 */
@mixin tnk-input-is-not-disabled() {
  &:not(:disabled):not(.is-disabled) {
    @content;
  }
}

/**
 * Generates InputGroup classes.
 */
@mixin tnk-create-input-group-classes() {
  .InputGroup {
    @include tnk-input-group-base-styles();
    @include tnk-append-input-group-parts();
  }
}

@mixin tnk-input-group-base-styles() {
  display: flex;
  flex-direction: row;

  > * {
    border-radius: 0;
  }

  > *:first-child {
    border-top-left-radius: tnk-border-radius('base');
    border-bottom-left-radius: tnk-border-radius('base');
  }

  > *:last-child {
    border-top-right-radius: tnk-border-radius('base');
    border-bottom-right-radius: tnk-border-radius('base');
  }
}

@mixin tnk-append-input-group-parts() {
  @include tnk-append-input-group-addon();
}

@mixin tnk-append-input-group-addon() {
  &-addon {
    @include tnk-input-group-addon-base-styles();
    @include tnk-append-input-group-color-theme-variants();
  }
}

@mixin tnk-input-group-addon-base-styles() {
  display: flex;
  align-items: center;
  padding: 0 tnk-spacing('base');
  background-color: tnk-color-theme('light');
}

@mixin tnk-append-input-group-color-theme-variants() {
  @each $color-theme, $color-theme-value in $tnk-color-themes {
    &--#{$color-theme} {
      background-color: $color-theme-value !important;
      color: tnk-color-contrast($color-theme-value) !important;
    }
  }
}
